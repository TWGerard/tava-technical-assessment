// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src-nest/prisma"
}

generator nestgraphql {
  provider           = "node node_modules/prisma-nestjs-graphql"
  output             = "../src-nest/prismagraphql"
  reExport           = Directories
  prismaClientImport = "src-nest/prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  employees Employee[]
}

model Person {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  email     String?   @unique
  phone     String?   @db.VarChar(11)
  employee  Employee?
  user      User?
}

model Employee {
  id           Int         @id @default(autoincrement())
  personId     Int         @unique
  person       Person      @relation(fields: [personId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  departmentId Int?
  department   Department? @relation(fields: [departmentId], references: [id], onDelete: SetNull, onUpdate: NoAction)
  title        String
}

model User {
  id       Int      @id @default(autoincrement())
  personId Int      @unique
  person   Person   @relation(fields: [personId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  userType UserType @default(USER)
}

enum UserType {
  USER
  STAFF
  ADMIN
}
